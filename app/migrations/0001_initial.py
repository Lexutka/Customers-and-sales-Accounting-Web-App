# Generated by Django 4.0.4 on 2022-05-31 08:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=40, verbose_name='ФИО')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('phone_number', models.IntegerField(blank=True, verbose_name='Телефон')),
                ('occupation', models.CharField(blank=True, max_length=40, verbose_name='Профессия')),
                ('address', models.CharField(blank=True, max_length=40, verbose_name='Домашний адрес')),
                ('sales_number', models.IntegerField(verbose_name='Кол-во продаж')),
                ('sales_value', models.IntegerField(verbose_name='Сумма продаж')),
                ('debt', models.IntegerField(verbose_name='Задолженность')),
                ('notes', models.TextField(blank=True, max_length=300, verbose_name='Заметки')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='MoneyFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_created=True, auto_now=True, verbose_name='Дата')),
                ('product_spendings', models.IntegerField(default=0, verbose_name='Расходы на продукцию')),
                ('order_making_spendings', models.IntegerField(default=0, verbose_name='Расходы на оформление заказов')),
                ('gasoline_spendings', models.IntegerField(default=0, verbose_name='Транспортные расходы')),
                ('delivery_spendings', models.IntegerField(default=0, verbose_name='Расходы на доставку продукции')),
                ('other_spendings', models.IntegerField(default=0, verbose_name='Прочие расходы')),
                ('income', models.IntegerField(default=0, verbose_name='Доходы')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование ')),
                ('product_type', models.IntegerField(choices=[(1, 'Уход за кожей TimeWise® Age Minimize 3D'), (2, 'Уход за кожей TimeWise Repair'), (3, 'Уход за кожей Botanical Effects'), (4, 'Уход за кожей Clear Proof'), (5, 'Уход за кожей Naturally'), (6, 'Коллекция MKMEN'), (7, 'Дополнительные средства'), (8, 'Аксессуары / Компактные футляры'), (9, 'Косметические кисти'), (10, 'Идеальный тон'), (11, 'Румяна / Контуринг'), (12, 'Брови'), (13, 'Глаза'), (14, 'Губы'), (15, 'Тело'), (16, 'Парфюм'), (17, 'Секция 2'), (18, 'Бонусы / подарки')], default=1, verbose_name='Тип')),
                ('price', models.IntegerField(default=0, verbose_name='Стоимость')),
                ('exp_date', models.DateField(verbose_name='Срок годности')),
                ('sold', models.BooleanField(default=False, verbose_name='Куплено')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_created=True, auto_now=True, verbose_name='Дата публикации')),
                ('credit', models.IntegerField(verbose_name='Сумма отложенного платежа')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Покупатель', to='app.client')),
                ('product1', models.ManyToManyField(related_name='Прод1', to='app.product')),
                ('product10', models.ManyToManyField(related_name='Прод10', to='app.product')),
                ('product11', models.ManyToManyField(related_name='Курс11', to='app.product')),
                ('product12', models.ManyToManyField(related_name='Прод12', to='app.product')),
                ('product13', models.ManyToManyField(related_name='Прод13', to='app.product')),
                ('product14', models.ManyToManyField(related_name='Прод14', to='app.product')),
                ('product15', models.ManyToManyField(related_name='Прод15', to='app.product')),
                ('product16', models.ManyToManyField(related_name='Прод16', to='app.product')),
                ('product17', models.ManyToManyField(related_name='Прод17', to='app.product')),
                ('product18', models.ManyToManyField(related_name='Прод18', to='app.product')),
                ('product2', models.ManyToManyField(related_name='Прод2', to='app.product')),
                ('product3', models.ManyToManyField(related_name='Прод3', to='app.product')),
                ('product4', models.ManyToManyField(related_name='Прод4', to='app.product')),
                ('product5', models.ManyToManyField(related_name='Прод5', to='app.product')),
                ('product6', models.ManyToManyField(related_name='Прод6', to='app.product')),
                ('product7', models.ManyToManyField(related_name='Прод7', to='app.product')),
                ('product8', models.ManyToManyField(related_name='Прод8', to='app.product')),
                ('product9', models.ManyToManyField(related_name='Прод9', to='app.product')),
            ],
        ),
    ]
